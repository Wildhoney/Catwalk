/*! catwalk.js by Adam Timberlake created on 2013-12-10 */
!function(a){"use strict";a.catwalk={}}(window),function(a){"use strict";var b=function(a){return String(a)},c=function(a){return Number(a)},d=function(a){return Number(a)},e=function(a){return Boolean(a)};a.catwalk.attribute={string:b,integer:c,"float":d,"boolean":e}}(window),function(a){"use strict";var b={},c=function(a,b){this._crossfilter={},this._dimensions={},this._name=a,this._properties=b;var c=this._crossfilter=crossfilter([]),d=this._dimensions,e=_.keys(b);_.forEach(e,function(a){"_"!==a.charAt(0)&&(d[a]=c.dimension(function(b){return b[a]}))}),d.catwalkId=c.dimension(function(a){return a._catwalkId})};c.prototype={_name:"",_events:{create:function(a){console.info("Created "+a.length+" model(s): "+_.pluck(a,"id"))},read:function(){},update:function(){},"delete":function(){}},_properties:{},_crossfilter:{},_dimensions:{},_deletedIds:[],addModel:function(a){return this.addModels([a])[0]},addModels:function(a){var b=[],c=this._properties,d=this._properties._relationships||{},e=_.bind(this._createRelationship,this);_.forEach(a,function(a){a._catwalkId=_.uniqueId("catwalk_")}),a.forEach(function(a){_.forEach(a,function(b,f){if("_catwalkId"!==f){if("function"==typeof d[f])return e(a,f,b),void 0;try{a[f]=c[f](b)}catch(g){throw"You forgot to define the `"+f+"` property on the collection blueprint."}}}),b.push(a)}),this._crossfilter.add(b);var f=this._properties._primaryKey,g=_.pluck(a,"id"),h=this._dimensions[f].filterAll().filterFunction(function(a){return!!_.contains(g,a)});return this._events.create(a),h.top(1/0)},when:function(a,b){this._events[a]=b},deleteModel:function(a){this.deleteModels([a])},deleteModels:function(a){this._deletedIds=this._deletedIds.concat(_.pluck(a,"_catwalkId"));var b=[],c=this._dimensions.catwalkId,d=this._deletedIds;_.forEach(a,function(a){if(!("_catwalkId"in a))throw"You are attempting to remove a non-Catwalk model.";c.filterFunction(function(a){return!_.contains(d,a)}),b.push(a)}),this._events.delete(a)},all:function(){var a=this._dimensions[this._properties._primaryKey].filterAll().top(1/0);return this._events.read(a),a},size:function(){return this._crossfilter.size()},_createRelationship:function(a,b,c){var d=this._properties._relationships||{};Object.defineProperty(a,b,{get:function(){return d[b](c)}})}},a.collection=function(a,d){return d?(b[a]=new c(a,d),b[a]):b[a]}}(window.catwalk),function(a,b,c){"use strict";var d=function(a){return function(d){var e=b.collection(a.collection),f=e._dimensions[a.foreignKey],g=f.filterAll().filterFunction(function(a){return d===a}).top(1/0)||[];if(0===g.length){var h=c.defer();e._events.read(d,h),h.promise.then(function(a){a=e.addModel(a),g.push(a),console.log(g)})}return g[0]}},e=function(a){return function(d){var e=b.collection(a.collection),f=e._dimensions[a.foreignKey],g=f.filterAll().filterFunction(function(a){return!!_.contains(d,a)}).top(1/0);if(d.length!==g.length){var h=c.defer(),i=_.difference(d,_.pluck(g,"id"));e._events.read(i,h),h.promise.then(function(a){var b=e.addModels(a);a=a.concat(b),console.log(a)})}return g}};a.catwalk.relationship={hasOne:d,hasMany:e,belongsTo:function(){},hasAndBelongsToMany:function(){}}}(window,window.catwalk,window.Q);