/*! catwalk.js by Adam Timberlake created on 2013-12-12 */
!function(a){"use strict";a.catwalk={}}(window),function(a){"use strict";var b=function(a){return String(a)},c=function(a){return Number(a)},d=function(a){return Number(a)},e=function(a){return Boolean(a)};a.catwalk.attribute={string:b,integer:c,"float":d,"boolean":e}}(window),function(a,b){"use strict";var c={},d=function(a,b){this._crossfilter={},this._dimensions={},this._events={create:function(){},read:function(){},update:function(){},"delete":function(){},content:function(){}},this._name=a,this._properties=b;var c=this._crossfilter=crossfilter([]),d=this._dimensions,e=_.keys(b);_.forEach(e,function(a){"_"!==a.charAt(0)&&"$"!==a.charAt(0)&&(d[a]=c.dimension(function(b){return b[a]}))}),d.catwalkId=c.dimension(function(a){return a._catwalkId})};d.prototype={_name:"",_events:{},_properties:{},_crossfilter:{},_dimensions:{},_deletedIds:[],createModel:function(a){var b=this._properties,c=_.bind(this._createRelationship,this),d=this._properties._relationships||{},e=this._dimensions.catwalkId;return a._catwalkId=_.uniqueId("catwalk_"),_.forEach(a,function(e,f){if("_catwalkId"!==f&&"$"!==f.charAt(0)){if("function"==typeof d[f])return c(a,f,e),void 0;try{a[f]=b[f](e)}catch(g){throw"You forgot to define the `"+f+"` property on the collection blueprint."}}}),this._crossfilter.add([a]),this._finalise("create",e.top(1/0)[0])},_createReject:function(a){this.deleteModel(a)},updateModel:function(a,b){if(!("_catwalkId"in a))throw"You are attempting to remove a non-Catwalk model.";this.deleteModel(a);var c=_.extend(_.clone(a),b);return _.forEach(this._properties._relationships,function(d,e){delete c[e],c[e]=b[e]?b[e]:a._relationshipMeta[e]}),delete c._relationshipMeta,this._finalise("update",this.createModel(c),a)},_updateReject:function(a,b){this.deleteModel(a),this._reanimateModel(b)},_reanimateModel:function(a){var b=a._catwalkId,c=_.indexOf(this._deletedIds,b);this._deletedIds.splice(c,1),this._dimensions.catwalkId.filterFunction(_.bind(function(a){return!_.contains(this._deletedIds,a)},this))},_finalise:function(a,c,d){var e=b.defer(),f=_.bind(function(){this._events.content(this.all())},this);return this._events[a](e,c),e.promise.fail(_.bind(function(){var b="_"+a+"Reject";this[b](c,d),f()},this)),f(),c},createModels:function(a){return this._createModels(a,!0)},on:function(a,b){this._events[a]=b},watch:function(a,b){this._events[a]=b},deleteModel:function(a){var b=this._deletedIds;if(!("_catwalkId"in a))throw"You are attempting to remove a non-Catwalk model.";return b.push(a._catwalkId),this._dimensions.catwalkId.filterFunction(function(a){return!_.contains(b,a)}),this._finalise("delete",a)},_deleteReject:function(a){this._reanimateModel(a)},all:function(){var a=this._dimensions[this._properties._primaryKey].filterAll().top(1/0);return this._events.read(a),a},size:function(){return this._crossfilter.size()},_createRelationship:function(a,b,c){var d=this._properties._relationships||{};Object.defineProperty(a,b,{get:function(){return d[b](c)}}),"_relationshipMeta"in a||(a._relationshipMeta={}),a._relationshipMeta[b]=c}},a.collection=function(a,b){return b?(c[a]=new d(a,b),c[a]):c[a]}}(window.catwalk,window.Q),function(a,b,c){"use strict";var d=function(a){return function(d){var e=b.collection(a.collection),f=e._dimensions[a.foreignKey],g=f.filterAll().filterFunction(function(a){return d===a}).top(1/0)||[];if(0===g.length){var h=c.defer();e._events.read(d,h),h.promise.then(function(a){a=e.addModel(a),g.push(a),console.log(g)})}return g[0]}},e=function(a){return function(d){var e=b.collection(a.collection),f=e._dimensions[a.foreignKey],g=f.filterAll().filterFunction(function(a){return!!_.contains(d,a)}).top(1/0);if(d.length!==g.length){var h=c.defer(),i=_.difference(d,_.pluck(g,"id"));e._events.read(i,h),h.promise.then(function(a){var b=e.addModels(a);a=a.concat(b),console.log(a)})}return g}};a.catwalk.relationship={hasOne:d,hasMany:e,belongsTo:function(){},hasAndBelongsToMany:function(){}}}(window,window.catwalk,window.Q);