/*! catwalk.js by Adam Timberlake created on 2013-12-12 */
!function(a){"use strict";a.catwalk={}}(window),function(a){"use strict";var b=function(a){return String(a)},c=function(a){return Number(a)},d=function(a){return Number(a)},e=function(a){return Boolean(a)};a.catwalk.attribute={string:b,integer:c,"float":d,"boolean":e}}(window),function(a,b){"use strict";var c={},d=function(a,b){this._crossfilter={},this._dimensions={},this._name=a,this._properties=b;var c=this._crossfilter=crossfilter([]),d=this._dimensions,e=_.keys(b);_.forEach(e,function(a){"_"!==a.charAt(0)&&(d[a]=c.dimension(function(b){return b[a]}))}),d.catwalkId=c.dimension(function(a){return a._catwalkId})};d.prototype={_name:"",_events:{create:function(a){console.info("Created "+a.length+" model(s): "+_.pluck(a,"id"))},read:function(){},update:function(){},"delete":function(){},content:function(){}},_properties:{},_crossfilter:{},_dimensions:{},_deletedIds:[],addModel:function(a){return this.addModels([a])[0]},addModels:function(a){return this._addModels(a,!0)},_addModels:function(a,c){var d=[],e=_.bind(this._deleteModels,this),f=this._events,g=_.bind(this.all,this),h=this._properties,i=this._properties._relationships||{},j=_.bind(this._createRelationship,this),k=_.bind(this._events.create,this);_.forEach(a,function(a){a._catwalkId=_.uniqueId("catwalk_")}),a.forEach(function(a){_.forEach(a,function(b,c){if("_catwalkId"!==c){if("function"==typeof i[c])return j(a,c,b),void 0;try{a[c]=h[c](b)}catch(d){throw"You forgot to define the `"+c+"` property on the collection blueprint."}}}),d.push(a)}),this._crossfilter.add(d);var l=this._properties._primaryKey,m=_.pluck(a,"id"),n=this._dimensions[l].filterAll().filterFunction(function(a){return!!_.contains(m,a)});return c&&(_.forEach(a,function(a){var c=b.defer();k(c,a),c.promise.fail(function(){e([a],!1),f.content(g())})}),this._events.content(this.all())),n.top(1/0)},on:function(a,b){this._events[a]=b},watch:function(a,b){this._events[a]=b},updateModel:function(a,c){if(!("_catwalkId"in a))throw"You are attempting to remove a non-Catwalk model.";this._deleteModels([a],!1);var d=_.extend(a,c);_.forEach(this._properties._relationships,function(b,e){delete d[e],d[e]=c[e]?c[e]:a._relationshipMeta[e]}),delete d._relationshipMeta,a=this._addModels([d],!1)[0];var e=b.defer();return this._events.update(e,a),e.promise.fail(_.bind(function(){this._deleteModels([a],!1),this._events.content(this.all())},this)),this._events.content(this.all()),this._dimensions.catwalkId.filterExact(d._catwalkId).top(1/0)[0]},deleteModel:function(a){this.deleteModels([a])},deleteModels:function(a){this._deleteModels(a,!0)},_deleteModels:function(a,c){this._deletedIds=this._deletedIds.concat(_.pluck(a,"_catwalkId"));var d=this._dimensions.catwalkId,e=this._deletedIds,f=this,g=this._events,h=_.bind(g.delete,this),i=_.bind(this.all,this);_.forEach(a,function(a){if(!("_catwalkId"in a))throw"You are attempting to remove a non-Catwalk model.";if(d.filterFunction(function(a){return!_.contains(e,a)}),c){var j=b.defer();h(j,a),j.promise.fail(_.bind(function(){var b=_.indexOf(f._deletedIds,a._catwalkId);f._deletedIds.splice(b,1),d.filterFunction(function(a){return!_.contains(f._deletedIds,a)}),g.content(i())},a))}}),this._events.content(this.all())},all:function(){var a=this._dimensions[this._properties._primaryKey].filterAll().top(1/0);return this._events.read(a),a},size:function(){return this._crossfilter.size()},_createRelationship:function(a,b,c){var d=this._properties._relationships||{};Object.defineProperty(a,b,{get:function(){return d[b](c)}}),"_relationshipMeta"in a||(a._relationshipMeta={}),a._relationshipMeta[b]=c}},a.collection=function(a,b){return b?(c[a]=new d(a,b),c[a]):c[a]}}(window.catwalk,window.Q),function(a,b,c){"use strict";var d=function(a){return function(d){var e=b.collection(a.collection),f=e._dimensions[a.foreignKey],g=f.filterAll().filterFunction(function(a){return d===a}).top(1/0)||[];if(0===g.length){var h=c.defer();e._events.read(d,h),h.promise.then(function(a){a=e.addModel(a),g.push(a),console.log(g)})}return g[0]}},e=function(a){return function(d){var e=b.collection(a.collection),f=e._dimensions[a.foreignKey],g=f.filterAll().filterFunction(function(a){return!!_.contains(d,a)}).top(1/0);if(d.length!==g.length){var h=c.defer(),i=_.difference(d,_.pluck(g,"id"));e._events.read(i,h),h.promise.then(function(a){var b=e.addModels(a);a=a.concat(b),console.log(a)})}return g}};a.catwalk.relationship={hasOne:d,hasMany:e,belongsTo:function(){},hasAndBelongsToMany:function(){}}}(window,window.catwalk,window.Q);