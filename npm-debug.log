0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@1.3.11
3 info using node@v0.10.18
4 verbose publish [ '.' ]
5 verbose cache add [ '.', null ]
6 verbose cache add name=undefined spec="." args=[".",null]
7 verbose parsed url { protocol: null,
7 verbose parsed url   slashes: null,
7 verbose parsed url   auth: null,
7 verbose parsed url   host: null,
7 verbose parsed url   port: null,
7 verbose parsed url   hostname: null,
7 verbose parsed url   hash: null,
7 verbose parsed url   search: null,
7 verbose parsed url   query: null,
7 verbose parsed url   pathname: '.',
7 verbose parsed url   path: '.',
7 verbose parsed url   href: '.' }
8 silly lockFile 3a52ce78- .
9 verbose lock . /Users/Wildhoney/.npm/3a52ce78-.lock
10 verbose tar pack [ '/var/folders/x1/1qs6hn2n0_1_3f6rdcp0854h0000gn/T/npm-3481-kFjmEdWQ/1387237917489-0.9533829742576927/tmp.tgz',
10 verbose tar pack   '.' ]
11 verbose tarball /var/folders/x1/1qs6hn2n0_1_3f6rdcp0854h0000gn/T/npm-3481-kFjmEdWQ/1387237917489-0.9533829742576927/tmp.tgz
12 verbose folder .
13 info prepublish catwalk.js@0.1.14
14 silly lockFile 1f1177db-tar tar://.
15 verbose lock tar://. /Users/Wildhoney/.npm/1f1177db-tar.lock
16 silly lockFile 47460a2a-17489-0-9533829742576927-tmp-tgz tar:///var/folders/x1/1qs6hn2n0_1_3f6rdcp0854h0000gn/T/npm-3481-kFjmEdWQ/1387237917489-0.9533829742576927/tmp.tgz
17 verbose lock tar:///var/folders/x1/1qs6hn2n0_1_3f6rdcp0854h0000gn/T/npm-3481-kFjmEdWQ/1387237917489-0.9533829742576927/tmp.tgz /Users/Wildhoney/.npm/47460a2a-17489-0-9533829742576927-tmp-tgz.lock
18 silly lockFile 1f1177db-tar tar://.
19 silly lockFile 1f1177db-tar tar://.
20 silly lockFile 47460a2a-17489-0-9533829742576927-tmp-tgz tar:///var/folders/x1/1qs6hn2n0_1_3f6rdcp0854h0000gn/T/npm-3481-kFjmEdWQ/1387237917489-0.9533829742576927/tmp.tgz
21 silly lockFile 47460a2a-17489-0-9533829742576927-tmp-tgz tar:///var/folders/x1/1qs6hn2n0_1_3f6rdcp0854h0000gn/T/npm-3481-kFjmEdWQ/1387237917489-0.9533829742576927/tmp.tgz
22 verbose tar unpack /var/folders/x1/1qs6hn2n0_1_3f6rdcp0854h0000gn/T/npm-3481-kFjmEdWQ/1387237917489-0.9533829742576927/tmp.tgz
23 silly lockFile 4d2c8bb4-17489-0-9533829742576927-package tar:///var/folders/x1/1qs6hn2n0_1_3f6rdcp0854h0000gn/T/npm-3481-kFjmEdWQ/1387237917489-0.9533829742576927/package
24 verbose lock tar:///var/folders/x1/1qs6hn2n0_1_3f6rdcp0854h0000gn/T/npm-3481-kFjmEdWQ/1387237917489-0.9533829742576927/package /Users/Wildhoney/.npm/4d2c8bb4-17489-0-9533829742576927-package.lock
25 silly lockFile 47460a2a-17489-0-9533829742576927-tmp-tgz tar:///var/folders/x1/1qs6hn2n0_1_3f6rdcp0854h0000gn/T/npm-3481-kFjmEdWQ/1387237917489-0.9533829742576927/tmp.tgz
26 verbose lock tar:///var/folders/x1/1qs6hn2n0_1_3f6rdcp0854h0000gn/T/npm-3481-kFjmEdWQ/1387237917489-0.9533829742576927/tmp.tgz /Users/Wildhoney/.npm/47460a2a-17489-0-9533829742576927-tmp-tgz.lock
27 silly gunzTarPerm modes [ '755', '644' ]
28 silly gunzTarPerm extractEntry package.json
29 silly gunzTarPerm extractEntry .npmignore
30 silly gunzTarPerm extractEntry README.md
31 silly gunzTarPerm extractEntry Gruntfile.js
32 silly gunzTarPerm extractEntry .travis.yml
33 silly gunzTarPerm extractEntry bower.json
34 silly gunzTarPerm extractEntry .jshintrc
35 silly gunzTarPerm extractEntry example/default.js
36 silly gunzTarPerm extractEntry example/app/Default.js
37 silly gunzTarPerm extractEntry example/app/collections/CatsCollection.js
38 silly gunzTarPerm extractEntry example/app/collections/ColoursCollection.js
39 silly gunzTarPerm extractEntry example/app/collections/CountriesCollection.js
40 silly gunzTarPerm extractEntry example/app/collections/PeopleCollection.js
41 silly gunzTarPerm extractEntry example/app/controllers/CatsController.js
42 silly gunzTarPerm extractEntry example/index.html
43 silly gunzTarPerm extractEntry tests/spec.js
44 silly gunzTarPerm extractEntry tests/index.html
45 silly gunzTarPerm extractEntry package/Attribute.js
46 silly gunzTarPerm extractEntry package/Catwalk.js
47 silly gunzTarPerm extractEntry package/Collection.js
48 silly gunzTarPerm extractEntry package/Relationship.js
49 silly gunzTarPerm extractEntry dist/catwalk.js
50 silly gunzTarPerm extractEntry dist/catwalk.min.js
51 silly lockFile 4d2c8bb4-17489-0-9533829742576927-package tar:///var/folders/x1/1qs6hn2n0_1_3f6rdcp0854h0000gn/T/npm-3481-kFjmEdWQ/1387237917489-0.9533829742576927/package
52 silly lockFile 4d2c8bb4-17489-0-9533829742576927-package tar:///var/folders/x1/1qs6hn2n0_1_3f6rdcp0854h0000gn/T/npm-3481-kFjmEdWQ/1387237917489-0.9533829742576927/package
53 silly lockFile 47460a2a-17489-0-9533829742576927-tmp-tgz tar:///var/folders/x1/1qs6hn2n0_1_3f6rdcp0854h0000gn/T/npm-3481-kFjmEdWQ/1387237917489-0.9533829742576927/tmp.tgz
54 silly lockFile 47460a2a-17489-0-9533829742576927-tmp-tgz tar:///var/folders/x1/1qs6hn2n0_1_3f6rdcp0854h0000gn/T/npm-3481-kFjmEdWQ/1387237917489-0.9533829742576927/tmp.tgz
55 verbose tar pack [ '/Users/Wildhoney/.npm/catwalk.js/0.1.14/package.tgz',
55 verbose tar pack   '/var/folders/x1/1qs6hn2n0_1_3f6rdcp0854h0000gn/T/npm-3481-kFjmEdWQ/1387237917489-0.9533829742576927/package' ]
56 verbose tarball /Users/Wildhoney/.npm/catwalk.js/0.1.14/package.tgz
57 verbose folder /var/folders/x1/1qs6hn2n0_1_3f6rdcp0854h0000gn/T/npm-3481-kFjmEdWQ/1387237917489-0.9533829742576927/package
58 silly lockFile 4d2c8bb4-17489-0-9533829742576927-package tar:///var/folders/x1/1qs6hn2n0_1_3f6rdcp0854h0000gn/T/npm-3481-kFjmEdWQ/1387237917489-0.9533829742576927/package
59 verbose lock tar:///var/folders/x1/1qs6hn2n0_1_3f6rdcp0854h0000gn/T/npm-3481-kFjmEdWQ/1387237917489-0.9533829742576927/package /Users/Wildhoney/.npm/4d2c8bb4-17489-0-9533829742576927-package.lock
60 silly lockFile d0f73939-pm-catwalk-js-0-1-14-package-tgz tar:///Users/Wildhoney/.npm/catwalk.js/0.1.14/package.tgz
61 verbose lock tar:///Users/Wildhoney/.npm/catwalk.js/0.1.14/package.tgz /Users/Wildhoney/.npm/d0f73939-pm-catwalk-js-0-1-14-package-tgz.lock
62 silly lockFile 4d2c8bb4-17489-0-9533829742576927-package tar:///var/folders/x1/1qs6hn2n0_1_3f6rdcp0854h0000gn/T/npm-3481-kFjmEdWQ/1387237917489-0.9533829742576927/package
63 silly lockFile 4d2c8bb4-17489-0-9533829742576927-package tar:///var/folders/x1/1qs6hn2n0_1_3f6rdcp0854h0000gn/T/npm-3481-kFjmEdWQ/1387237917489-0.9533829742576927/package
64 silly lockFile d0f73939-pm-catwalk-js-0-1-14-package-tgz tar:///Users/Wildhoney/.npm/catwalk.js/0.1.14/package.tgz
65 silly lockFile d0f73939-pm-catwalk-js-0-1-14-package-tgz tar:///Users/Wildhoney/.npm/catwalk.js/0.1.14/package.tgz
66 silly lockFile d90c8aad-ey-npm-catwalk-js-0-1-14-package /Users/Wildhoney/.npm/catwalk.js/0.1.14/package
67 verbose lock /Users/Wildhoney/.npm/catwalk.js/0.1.14/package /Users/Wildhoney/.npm/d90c8aad-ey-npm-catwalk-js-0-1-14-package.lock
68 silly lockFile d90c8aad-ey-npm-catwalk-js-0-1-14-package /Users/Wildhoney/.npm/catwalk.js/0.1.14/package
69 silly lockFile d90c8aad-ey-npm-catwalk-js-0-1-14-package /Users/Wildhoney/.npm/catwalk.js/0.1.14/package
70 verbose tar unpack /Users/Wildhoney/.npm/catwalk.js/0.1.14/package.tgz
71 silly lockFile ca02effc-ey-npm-catwalk-js-0-1-14-package tar:///Users/Wildhoney/.npm/catwalk.js/0.1.14/package
72 verbose lock tar:///Users/Wildhoney/.npm/catwalk.js/0.1.14/package /Users/Wildhoney/.npm/ca02effc-ey-npm-catwalk-js-0-1-14-package.lock
73 silly lockFile d0f73939-pm-catwalk-js-0-1-14-package-tgz tar:///Users/Wildhoney/.npm/catwalk.js/0.1.14/package.tgz
74 verbose lock tar:///Users/Wildhoney/.npm/catwalk.js/0.1.14/package.tgz /Users/Wildhoney/.npm/d0f73939-pm-catwalk-js-0-1-14-package-tgz.lock
75 silly gunzTarPerm modes [ '755', '644' ]
76 silly gunzTarPerm extractEntry package.json
77 silly gunzTarPerm extractEntry .npmignore
78 silly gunzTarPerm extractEntry README.md
79 silly gunzTarPerm extractEntry Gruntfile.js
80 silly gunzTarPerm extractEntry bower.json
81 silly gunzTarPerm extractEntry .jshintrc
82 silly gunzTarPerm extractEntry dist/catwalk.js
83 silly gunzTarPerm extractEntry dist/catwalk.min.js
84 silly gunzTarPerm extractEntry example/default.js
85 silly gunzTarPerm extractEntry example/app/Default.js
86 silly gunzTarPerm extractEntry example/app/collections/CatsCollection.js
87 silly gunzTarPerm extractEntry example/app/collections/ColoursCollection.js
88 silly gunzTarPerm extractEntry example/app/collections/CountriesCollection.js
89 silly gunzTarPerm extractEntry example/app/collections/PeopleCollection.js
90 silly gunzTarPerm extractEntry example/app/controllers/CatsController.js
91 silly gunzTarPerm extractEntry example/index.html
92 silly gunzTarPerm extractEntry package/Attribute.js
93 silly gunzTarPerm extractEntry package/Catwalk.js
94 silly gunzTarPerm extractEntry package/Collection.js
95 silly gunzTarPerm extractEntry package/Relationship.js
96 silly gunzTarPerm extractEntry .travis.yml
97 silly gunzTarPerm extractEntry tests/spec.js
98 silly gunzTarPerm extractEntry tests/index.html
99 silly lockFile ca02effc-ey-npm-catwalk-js-0-1-14-package tar:///Users/Wildhoney/.npm/catwalk.js/0.1.14/package
100 silly lockFile ca02effc-ey-npm-catwalk-js-0-1-14-package tar:///Users/Wildhoney/.npm/catwalk.js/0.1.14/package
101 silly lockFile d0f73939-pm-catwalk-js-0-1-14-package-tgz tar:///Users/Wildhoney/.npm/catwalk.js/0.1.14/package.tgz
102 silly lockFile d0f73939-pm-catwalk-js-0-1-14-package-tgz tar:///Users/Wildhoney/.npm/catwalk.js/0.1.14/package.tgz
103 verbose chmod /Users/Wildhoney/.npm/catwalk.js/0.1.14/package.tgz 644
104 verbose chown /Users/Wildhoney/.npm/catwalk.js/0.1.14/package.tgz [ 501, 20 ]
105 silly lockFile 3a52ce78- .
106 silly lockFile 3a52ce78- .
107 silly publish { name: 'catwalk.js',
107 silly publish   buildName: 'catwalk',
107 silly publish   version: '0.1.14',
107 silly publish   description: 'Intuitive and fast relational CRUD interface for modelling relationships using vanilla objects.',
107 silly publish   main: 'index.js',
107 silly publish   scripts: { test: 'grunt test' },
107 silly publish   repository:
107 silly publish    { type: 'git',
107 silly publish      url: 'https://github.com/Wildhoney/Catwalk.js.git' },
107 silly publish   keywords: [ 'crud', 'relationships' ],
107 silly publish   author: { name: 'Adam Timberlake' },
107 silly publish   license: 'BSD-2-Clause',
107 silly publish   bugs: { url: 'https://github.com/Wildhoney/Catwalk.js/issues' },
107 silly publish   directories: { example: 'example' },
107 silly publish   dependencies:
107 silly publish    { grunt: '~0.4.2',
107 silly publish      'grunt-contrib-jshint': '~0.7.2',
107 silly publish      'grunt-contrib-uglify': '~0.2.7',
107 silly publish      should: '~2.1.1',
107 silly publish      'grunt-contrib-jasmine': '~0.5.2',
107 silly publish      'grunt-contrib-concat': '~0.3.0' },
107 silly publish   readme: 'Catwalk.js\n======\n\n<img src="https://travis-ci.org/Wildhoney/Catwalk.js.png?branch=master" />\n&nbsp;\n<img src="https://badge.fury.io/js/catwalk.js.png" />\n\nWhy Catwalk? Because it\'s jam-packed full of models! Catwalk has engendered from the observations on the plight of <a href="https://github.com/emberjs/data" target="_blank">Ember Data</a>, and instead doesn\'t even *try* to predict everything &ndash; instead Catwalk.js is more focused on satisfying the <a href="http://en.wikipedia.org/wiki/KISS_principle" target="_blank">KISS principle</a>.\n\n**Friends:** Uses <a href="https://github.com/square/crossfilter" target="_blank">Crossfilter</a>, <a href="http://underscorejs.org/" target="_blank">Underscore</a>, and <a href="https://github.com/kriskowal/q" target="_blank">Q</a> extensively.\n\n<img src="http://fc06.deviantart.net/fs37/i/2008/265/2/8/Cat_silhouette_by_valsgalore.png" />\n\nCatwalk is entirely API agnostic. It doesn\'t matter whether you\'re serving your data through JSON, CSV, or your very own custom data format. Catwalk is **only** concerned with creating, reading, updating, and deleting (CRUD).\n\nCreating a Collection\n-----\n\nBefore you can begin creating models you will need to create collections &ndash; these serve as blueprints for your models.\n\n```javascript\nvar $cats = $catwalk.collection(\'cats\', {\n\n    /**\n     * @property id\n     * @type {Number}\n     */\n    id: $catwalk.attribute.integer,\n\n    /**\n     * @property name\n     * @type {String}\n     */\n    name: $catwalk.attribute.string,\n\n    /**\n     * @property age\n     * @type {Number}\n     */\n    age : $catwalk.attribute.integer\n\n});\n```\n\nIn the above example we have defined a `$cats` collection, which has three properties: `id`, `name`, and `age`. Each property can be assigned to a value, or a Catwalk function which will typecast the property for you.\n\nCatwalk has the following *typecastable* functions:\n\n * `catwalk.attribute.string`\n * `catwalk.attribute.integer`\n * `catwalk.attribute.float`\n * `catwalk.attribute.boolean`\n\nEach collection also needs to know what its primary key is &ndash; this can be defined with the protected `_primaryKey` property.\n\n```javascript\nvar $cats = $catwalk.collection(\'cats\', {\n\n    /**\n     * @property _primaryKey\n     * @type {String}\n     * @protected\n     */\n    _primaryKey: \'id\',\n\n    /**\n     * @property id\n     * @type {Number}\n     */\n    id: $catwalk.attribute.integer,\n\n    /**\n     * @property name\n     * @type {String}\n     */\n    name: $catwalk.attribute.string,\n\n    /**\n     * @property age\n     * @type {Number}\n     */\n    age : $catwalk.attribute.integer\n\n});\n```\n\nLast but not least, each collection can define its relationships to other collections with the protected `_relationships` object.\n\n```javascript\nvar $cats = $catwalk.collection(\'cats\', {\n\n    /**\n     * @property colours\n     * @type {Object}\n     */\n    _relationships: {\n\n        /**\n         * @property colours\n         * @type {Object}\n         */\n        colours: $catwalk.relationship.hasMany({\n            collection: \'colours\',\n            foreignKey: \'id\'\n        })\n\n    },\n\n    /**\n     * @property _primaryKey\n     * @type {String}\n     * @protected\n     */\n    _primaryKey: \'id\',\n\n    /**\n     * @property id\n     * @type {Number}\n     */\n    id: $catwalk.attribute.integer,\n\n    /**\n     * @property name\n     * @type {String}\n     */\n    name: $catwalk.attribute.string,\n\n    /**\n     * @property age\n     * @type {Number}\n     */\n    age : $catwalk.attribute.integer\n\n});\n```\n\nIn the relationship above we have defined a one-to-many relationship (`hasMany`), but we could also define a one-to-one relationship with `hasOne`. When you access the `colours` property on a model, the actual related colour models will be returned.\n\nManipulating\n-----\n\n<h3>Creating Models</h3>\n\nAfter you have created a collection, you can begin adding models to your collections. All models can be added with the `createModel` method &ndash; passing in the values of the properties we defined on the collection.\n\n```javascript\nvar missKittens = $cats.createModel({\n    id: 2,\n    name: \'Miss Kittens\',\n    age: 4,\n    colours: [1, 2, 3]\n});\n```\n\nCatwalk also has an `addModel` method which functions **exactly** like the `createModel` method except the `create` callback is not invoked.\n\nIn order for Catwalk to begin mapping the relationship, our model defines the `colours` property with an array of IDs.\n\nDuring the `create` process it is possible to add properties to the model via the promise. Simply pass through any additional properties that should be set on the model after its creation via the `resolve` and Catwalk will do the rest.\n\n```javascript\n$cats.watch(\'create\', function(deferred, model) {\n    deferred.resolve({\n        name: \'Miss Kittens\'\n    });\n});\n```\n\nIn the example above, every single created `cat` will inherit the name **Miss Kittens** &ndash; uh-oh! Only simple values can be updated this way, including the primary key &ndash; whereas relationships cannot.\n\n<h3>Updating Models</h3>\n\nYou can modify any property of a model by using the `updateModel` method. Each and every property can be updated, including the relationships.\n\n```javascript\n$cats.updateModel(missKittens, {\n    name: \'Lucifer\',\n    colours: [1, 2]\n});\n```\n\nIn the above example we have changed Miss Kittens to Lucifer &ndash; a **very** apt name! We have also updated the relationship to only two colours instead of three.\n\n<h3>Deleting Models</h3>\n\nWe can delete models using the `deleteModel` method which accepts one parameter of the model you wish to delete.\n\n```javascript\n$cats.deleteModel(missKittens);\n```\n\nUpdates\n-----\n\nWhenever a collection has been updated, the `content` event is invoked. You can watch the `content` event with the `watch` method &ndash; which is the same method you use for listening to CRUD events.\n\nFor instance, in Angular you could use the `watch` method and update the collection:\n\n```javascript\n$cats.watch(\'content\', function(collection) {\n\n    $scope.cats = collection;\n\n    if (!$scope.$$phase) {\n        $scope.$apply();\n    }\n\n});\n```\n\nPromises\n-----\n\nWith each create, read, update, and delete, Catwalk invokes a callback which allows you to communicate with your API. For every callback a <a href="http://martinfowler.com/bliki/JavascriptPromise.html">promise</a> is created which **must** be resolved or rejected.\n\nFor example, if you used the `createModel` method, then the `create` callback will be invoked &ndash; passing through the promise, and the model that was created. Once you have saved the model via your API, you can resolve the promise. If for some reason the save fails then you can reject the promise &ndash; Catwalk will rollback the creation of the model.\n\n```javascript\n$cats.watch(\'create\', function(deferred, model) {\n    myApi.save(JSON.stringify(model));\n    deferred.resolve();\n});\n```\n\nOther callbacks are exactly the same and provide the same rollback functionality when rejected: `create`, `update`, `delete`.\n\nHowever, `read` is the exception because a model does not yet exist. With the `read` callback we are asking your API to return the model because Catwalk does not have it &ndash; with this we merely pass through the ID of the model. You are only given **one** opportunity to return a desired model.\n\n```javascript\n$cats.watch(\'read\', function(deferred, property, value) {\n\n    myApi(\'http://www.example.org/cat/\' + property + \'/\' + value, function(model) {\n\n        deferred.resolve({\n            id: id,\n            colour: \'Blue\'\n        });\n\n    });\n\n});\n```\n\n<h3>Transactions</h3>\n\nAs Catwalk presents a promise for you to `resolve`/`reject`, it\'s **entirely** up to you at which point you perform that action. Therefore you could quite easily defer the promise until you have a handful and then process them in one fell swoop.\n\nRelationships\n-----\n\nAll relationships are defined with the protected `_relationships` property, and can be either a `hasOne` or `hasMany` relationship. Every single property can be involved in a relationship &ndash; not just the primary key.\n\n```javascript\n$countries.createModel({ id: 1, name: \'United Kingdom\', code: \'UK\' });\n$people.createModel({ id: 1, name: \'Adam\', country: \'UK\' });\n```\n\nIn the above example we have created a `hasOne` relationship between people and countries on the `country` property.\n\n```javascript\n/**\n * @property _relationships\n * @type {Object}\n * @protected\n */\n_relationships: {\n\n    /**\n     * @property country\n     * @type {Object}\n     */\n    country: $catwalk.relationship.hasOne({\n        collection: \'countries\',\n        foreignKey: \'code\'\n    })\n\n}\n```\n\nWe can therefore access the `country` property on each person model to bring back their related country. Notice that the relationship isn\'t performed on the primary key (`id`) but rather on the `code` property.',
107 silly publish   readmeFilename: 'README.md',
107 silly publish   _id: 'catwalk.js@0.1.14',
107 silly publish   dist: { shasum: 'ef06b471e82a7ba3f5b0068e871a0c0ec4871ffc' },
107 silly publish   _from: '.' }
108 verbose url raw catwalk.js
109 verbose url resolving [ 'https://registry.npmjs.org/', './catwalk.js' ]
110 verbose url resolved https://registry.npmjs.org/catwalk.js
111 info trying registry request attempt 1 at 23:51:57
112 http PUT https://registry.npmjs.org/catwalk.js
113 http 409 https://registry.npmjs.org/catwalk.js
114 verbose url raw catwalk.js
115 verbose url resolving [ 'https://registry.npmjs.org/', './catwalk.js' ]
116 verbose url resolved https://registry.npmjs.org/catwalk.js
117 info trying registry request attempt 1 at 23:51:58
118 http GET https://registry.npmjs.org/catwalk.js
119 http 200 https://registry.npmjs.org/catwalk.js
120 error publish fail Cannot publish over existing version.
120 error publish fail Update the 'version' field in package.json and try again.
120 error publish fail
120 error publish fail If the previous version was published in error, see:
120 error publish fail     npm help unpublish
120 error publish fail
120 error publish fail To automatically increment version numbers, see:
120 error publish fail     npm help version
121 error System Darwin 12.4.0
122 error command "node" "/usr/local/bin/npm" "publish"
123 error cwd /Users/Wildhoney/Webroot/Catwalk.js
124 error node -v v0.10.18
125 error npm -v 1.3.11
126 error code EPUBLISHCONFLICT
127 verbose exit [ 1, true ]
